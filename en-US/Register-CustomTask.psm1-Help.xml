<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!--
		Module: 		Register-CustomTask
		Version:		1.1.0.3
	-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Register-CustomTask</command:name>
			<maml:description>
				<maml:para>Register an event driven task in Windows Task Scheduler.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Register</command:verb>
			<command:noun>CustomTask</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Registers a new task in Windows Task Scheduler.  Task triggers on a specific event in a specific event log as configured by paramter values.
Default paramter values will trigger when the state of the PowerShell engine changes to &apos;Available&apos; event id 400 in the Windows PowerShell Event Log.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Register-CustomTask</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>TaskName</maml:name>
					<maml:description>
						<maml:para>
Name of the task that will be registered.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
					<maml:name>EventId</maml:name>
					<maml:description>
						<maml:para>Event id of the event to trigger on.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
					<dev:defaultValue>400</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="">
					<maml:name>Subscription</maml:name>
					<maml:description>
						<maml:para>Subscription string.  If you need help generating this string, create the task manually, export it then extract the &lt;QueryList&gt; block from the xml file.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>&quot;&lt;QueryList&gt;&lt;Query Id=&apos;0&apos;&gt;&lt;Select Path=&apos;Windows PowerShell&apos;&gt;*[System[(EventID=$EventId)]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;&quot;</dev:defaultValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="">
					<maml:name>ActionPath</maml:name>
					<maml:description>
						<maml:para>Path to the program that will trigger on the registered event.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>&apos;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe&apos;</dev:defaultValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="">
					<maml:name>ActionArgs</maml:name>
					<maml:description>
						<maml:para>Arguments to be executed by the program in -ArgumentPath</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
					<dev:defaultValue>
					</dev:defaultValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>TaskName</maml:name>
				<maml:description>
					<maml:para>
Name of the task that will be registered.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="">
				<maml:name>EventId</maml:name>
				<maml:description>
					<maml:para>Event id of the event to trigger on.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>400</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="">
				<maml:name>Subscription</maml:name>
				<maml:description>
					<maml:para>Subscription string.  If you need help generating this string, create the task manually, export it then extract the &lt;QueryList&gt; block from the xml file.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>&quot;&lt;QueryList&gt;&lt;Query Id=&apos;0&apos;&gt;&lt;Select Path=&apos;Windows PowerShell&apos;&gt;*[System[(EventID=$EventId)]]&lt;/Select&gt;&lt;/Query&gt;&lt;/QueryList&gt;&quot;</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="">
				<maml:name>ActionPath</maml:name>
				<maml:description>
					<maml:para>Path to the program that will trigger on the registered event.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>&apos;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe&apos;</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4" aliases="">
				<maml:name>ActionArgs</maml:name>
				<maml:description>
					<maml:para>Arguments to be executed by the program in -ArgumentPath</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>
				</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
					</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para/>
				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Register-CustomTask -TaskName FooMon -ActionArgs &quot;Import-Module Foo ; New-Foo&quot;</dev:code>
				<dev:remarks>
					<maml:para>This will register a new task in Windows Task Scheduler that triggers on default value of event id 400.  The task will exectute the default program, PowerShell and passes the arguments &quot;Import-Module Foo ; New-Foo&quot; to PowerShell for execution.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
</helpItems>